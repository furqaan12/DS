1)kmp


#include<stdio.h>
#include<string.h>
voidfail(char*pat,intfailure[])

{
inti,j,n=strlen(pat);
failure[0]=-1;
for(j=1;j<n;j++)
{
i=failure[j-1];
while((pat[j]!=pat[i+1])&&(i>=0))
i=failure[i];
if(pat[j]==pat[i+1])
failure[j]=i+1;

else

failure[j]=-1;

}
}
intpmatch(char*string,char*pat,intfailure[])
{
inti=0,j=0;
intlens=strlen(string);
intlenp=strlen(pat);
while(i<lens&&j<lenp)
{
if(string[i]==pat[j])
{
i++;
j++;
}
elseif(j==0)
i++;
else
j=failure[j-1]+1;

}
return((j==lenp)?(i-lenp):-1);
}
intmain()
{
charstring[50],pat[50];
intch,i;
intfailure[100];
printf("enterthestring\n");
scanf("%s",string);
printf("enterpattern\n");
scanf("%s",pat);
fail(pat,failure);
printf("%s\n",pat);
for(i=0;i<strlen(pat);i++)
printf("%d",failure[i]);
printf("\n");
printf("posofmatchis%d\n",pmatch(string,pat,failure)+1);
}


2) fast transpose 

#include<stdio.h>
#defineMAX_TERMS101
#defineMAX_COL101
typedefstruct
{
introw;
intcol;
intval;
}term;
voidinput(terma[])
{
intA[100][100],m,n,i,j,current;
printf("enterthenumberofrows\n");
scanf("%d",&m);
printf("enterthenumberofcolumns\n");

scanf("%d",&n);
printf("enterthematrixelements\n");
for(i=0;i<m;i++)
for(j=0;j<n;j++)
scanf("%d",&A[i][j]);

current=1;
for(i=0;i<m;i++)
{
for(j=0;j<n;j++)
{
if(A[i][j]!=0)
{
a[current].row=i;
a[current].col=j;
a[current].val=A[i][j];
current++;
}
}
}
a[0].row=m;
a[0].col=n;
a[0].val=current-1;
}
voidfast_transpose(terma[],termb[])
{
introw_terms[100],starting_pos[100];
inti,j,num_cols=a[0].col,num_terms=a[0].val;
b[0].col=num_cols;
b[0].row=a[0].row;
b[0].val=num_terms;
if(num_terms>0)
{
for(i=0;i<num_cols;i++)
row_terms[i]=0;
for(i=1;i<=num_terms;i++)
row_terms[a[i].col]++;
starting_pos[0]=1;
for(i=1;i<num_cols;i++)
starting_pos[i]=starting_pos[i-1]+row_terms[i-1];
for(i=1;i<=num_terms;i++)
{
j=starting_pos[a[i].col]++;
b[j].row=a[i].col;
b[j].col=a[i].row;
b[j].val=a[i].val;
}
}
}
voidoutput(termk[])
{

inti,num_terms;
num_terms=k[0].val;
printf("row\tcol\tvalue\n");
for(i=0;i<=num_terms;i++)
printf("%d\t%d\t%d\n",k[i].row,k[i].col,k[i].val);

}
intmain()
{
terma[MAX_TERMS],b[MAX_TERMS];
printf("Enterthematrix\n");
input(a);
output(a);
fast_transpose(a,b);
output(b);
}